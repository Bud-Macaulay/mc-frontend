---
import fs from "fs";
import path from "path";

import { Download } from "lucide-astro";

import Layout from "@layouts/Layout.astro";

// import { PUBLIC_FILES_BASE } from "astro:env/client";
const PUBLIC_FILES_BASE = import.meta.env.PUBLIC_FILES_BASE || "/";

const MANIFEST_FILE = path.resolve("./src/data/learn-manifest.json");
const manifest = JSON.parse(fs.readFileSync(MANIFEST_FILE, "utf-8"));

export async function getStaticPaths() {
  const MANIFEST_FILE = path.resolve("./src/data/learn-manifest.json");
  const manifest = JSON.parse(fs.readFileSync(MANIFEST_FILE, "utf-8"));

  const paths = manifest
    .filter((item) => item.type === "video")
    .map((item) => ({
      params: { id: item.id, slug: item.slug },
    }));

  return paths;
}

const { id } = Astro.params;

const video = manifest.find((item) => item.id === id);
if (!video) throw new Error(`Video not found: ${id}`);

const breadcrumbs = [
  { name: "Home", href: "." },
  { name: "Learn", href: "learn" },
];

let current = video;
const parentTrail = [];

// walk up parent chain
while (current.parentId) {
  const parent = manifest.find((item) => item.id === current.parentId);
  if (!parent) break;

  parentTrail.unshift({
    name: parent.title,
    href: `learn/sections/${parent.id}/${parent.slug}`,
  });

  current = parent;
}

// add the parent trail
breadcrumbs.push(...parentTrail);

// current video breadcrumb
breadcrumbs.push({
  name: video.title,
  href: `/learn/videos/${video.id}/${video.slug}`,
});

const title = video.title;
---

<!-- tailwind maxwidth increase to fit video player. -->
<Layout title={title} breadcrumbs={breadcrumbs} maxWidth="max-w-[1400px]">
  <div class="space-y-10">
    <section class="space-y-4">
      <h3 class="text-2xl">{video.title}</h3>
      <hr class="border-t border-gray-300 mb-6" />
    </section>
  </div>

  <!-- Entry information -->
  <section class="space-y-4 px-2">
    <p>
      {
        video.speakers && video.speakers.length > 0 && (
          <div class="video-author mt-2 italic">
            {video.speakers.map((speaker, index) => (
              <>
                Speakers:
                <span>
                  {speaker.title ? speaker.title + " " : ""}
                  {speaker.first_name} {speaker.last_name}
                  {index < video.speakers.length - 1 ? ", " : ""}
                </span>
                {video.profile_url && (
                  <a
                    href={video.profile_url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="hover:underline"
                  >
                    Event Profile
                  </a>
                )}
              </>
            ))}
          </div>
        )
      }
    </p>

    <div class="entry-description text-gray-500">
      Date:{" "}
      {
        new Date(video.date).toLocaleDateString("en-US", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }{" "}
    </div>

    <!-- Video description -->
    {
      video.description && (
        <div class="entry-description">
          <b>Description: </b>
          <span set:html={video.description} />
        </div>
      )
    }

    <!-- Additional resources -->
    {
      video.additional_resources &&
        video.additional_resources.map((res) => (
          <a
            href={`${PUBLIC_FILES_BASE}${video.id}/${res.url}`}
            download
            target="_blank"
            class="flex items-center space-x-1 hover:underline"
          >
            <Download class="w-4 h-4 mr-1 fill-current" />

            <span>{res.name}</span>
          </a>
        ))
    }
  </section>

  <!-- Entry video -->
  {
    video.video_source_id && (
      <section class="pt-4 border-t border-gray-300 mb-6 mt-4 flex flex-col items-center text-center">
        {video.vidType === "slideshot" ? (
          <iframe
            width="1200"
            height="600"
            src={`https://slideshot.epfl.ch/eplay/${video.video_source_id}`}
            title={video.title}
            frameborder="0"
            allowfullscreen
          />
        ) : (
          <iframe
            width="1100"
            height="619"
            src={`https://www.youtube.com/embed/${video.video_source_id}`}
            title={video.title}
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
          />
        )}
      </section>
    )
  }

  {
    video.video_source_id && (
      <section class="pt-4 border-t border-gray-300 mb-6 mt-4 flex flex-col items-center text-center">
        <a
          rel="license"
          href="http://creativecommons.org/licenses/by-sa/4.0/"
          target="_blank"
        >
          <img alt="Creative Commons License" src="images/cc_by_sa.png" />
        </a>

        <p class="mt-2">
          This video is hosted on
          <a
            target="_blank"
            href={
              video.vidType === "slideshot"
                ? "https://slideshot.io"
                : "https://www.youtube.com/@MaterialsCloud"
            }
            class="underline"
          >
            {video.vidType === "slideshot" ? "Slideshot" : "YouTube"}
          </a>
          and is released under the
          <a
            href="https://creativecommons.org/licenses/by-sa/4.0/"
            target="_blank"
            class="underline"
          >
            Creative Commons Attribution-ShareAlike 4.0
          </a>{" "}
          license.
        </p>
      </section>
    )
  }
</Layout>
