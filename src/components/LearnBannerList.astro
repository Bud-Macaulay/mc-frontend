---
// Similar to BannerList but with some additional
//  fields for speaker, file links etc.
import { Play, Download, CirclePlay } from "lucide-astro";

const { entries, rootPath } = Astro.props;

const BASE_DOWNLOAD = `https://rgw.cscs.ch/matcloud:mc-public/learn-data/files/`;
---

<div class="entries-container">
  {
    entries.map((entry, index) => {
      const isBottomLevel = entry.type === "video";
      const isVideo = entry.video_source_id;
      const href = isBottomLevel
        ? `learn/videos/${entry.id}/${entry.slug}`
        : `learn/sections/${entry.id}/${entry.slug}`;

      if (isBottomLevel) {
        return (
          <div class="entry-container items-center">
            {/* Media Section */}
            <div class="flex flex-col items-center w-48">
              <a href={href}>
                <img
                  src={`/images/learn/${entry.thumbnail_url}`}
                  alt={entry.title}
                  class="entry-image max-w-48 max-h-48 w-auto h-auto object-cover"
                  onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                />
                {/* on thumbnail error we render an astro play */}
                <div class="hidden items-center justify-center w-48 h-48 bg-gray-100 rounded">
                  <CirclePlay class="w-32 h-32 text-gray-500" />
                </div>
              </a>

              {/* Only render WATCH if video_source_id is not null */}
              {isVideo && (
                <a href={href} class="explore-button mt-2 flex items-center">
                  <Play class="w-4 h-4 mr-1 fill-current" />
                  WATCH
                </a>
              )}
            </div>

            <div class="entry-info-container">
              <a href={href} class="entry-title hover:underline">
                {entries.length - index}. {entry.title}{" "}
              </a>
              {entry.speakers && entry.speakers.length > 0 && (
                <div class="entry-author italic ml-2">
                  {entry.speakers.map((speaker, index) => (
                    <>
                      <span>
                        {speaker.title ? speaker.title + " " : ""}
                        {speaker.first_name} {speaker.last_name}
                        {index < entry.speakers.length - 1 ? ", " : ""}
                      </span>
                    </>
                  ))}
                </div>
              )}
              <hr class="border-t border-gray-200 mb-2" />
              <div class="entry-description text-gray-500 pl-1">
                Date:{" "}
                {new Date(entry.date).toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}{" "}
              </div>
              {/* some videos dont have descriptions*/}
              {entry.description && (
                <div class="entry-description pt-1 pl-1">
                  <b>Description: </b>
                  <span set:html={entry.description} />
                </div>
              )}

              <div class="entry-description pt-1 pl-2 flex items-center space-x-4">
                {/* Profile link */}
                {entry.profile_url && (
                  <a
                    href={entry.profile_url}
                    target="_blank"
                    class="hover:underline mr-24"
                  >
                    Profile link
                  </a>
                )}

                {/* Additional resources */}
                {entry.additional_resources &&
                  entry.additional_resources.map((res) => (
                    <a
                      href={`${BASE_DOWNLOAD}${entry.id}/${res.url}`}
                      download
                      target="_blank"
                      class="flex items-center space-x-1 hover:underline"
                    >
                      <Download class="w-4 h-4 mr-1 fill-current" />

                      <span>{res.name}</span>
                    </a>
                  ))}
              </div>
            </div>
          </div>
        );
      } else {
        return (
          <div class="entry-container">
            <div class="entry-flex">
              <a href={href}>
                <img
                  src={`images/learn/${entry.thumbnail_url}`}
                  alt={entry.title}
                  class="entry-image w-30"
                />
              </a>
            </div>
            <div class="entry-info-container">
              <a href={href} class="entry-title hover:underline">
                {entry.title}
              </a>

              <div class="entry-description pt-1 pl-1">
                <span set:html={entry.description} />
              </div>
            </div>
          </div>
        );
      }
    })
  }
</div>
